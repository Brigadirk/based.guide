{"version":3,"sources":["app/api/backend.cljs"],"mappings":";AAKA;;;sBAAA,AAAAA,YAAA,sBAAA,xDAAaC;AAEb,0BAAA,1BAAMC;AAAN,AACE,GAAI,iEAAA,jEAACC,6CAAEF;AAAP;;AAAA;;;AAIF,oCAAA,pCAAMG,gFAAmBC;AAAzB,AAAA,kDAAA,0HAAA,+HAAA,0HAAA,9TACS,oDAAA,pDAACC,4CAAID,iFACH,oDAAA,pDAACC,4CAAID,gFACP,oDAAA,pDAACC,4CAAID,+EACJ,oDAAA,pDAACC,4CAAID;;AAEf,4CAAA,5CAAME;AAAN,AACE,0JAAA,2CAAA,9LAACC,mDAAI,2BAAA,1BAAK,AAACN,qMACC,WAAKO;AAAL,AACE,OAACC,sBAAOC,uBAAmB,AAACC,6CAAKR,kCAAkBK;GAFjE,uEAGkBI;;AAEpB,iCAAA,jCAAMC,0EAAgBT;AAAtB,AAAA,kDAAA,0HAAA,+HAAA,gKAAA,0HAAA,9dACS,oDAAA,pDAACC,4CAAID,iFACH,oDAAA,pDAACC,4CAAID,uGACK,AAACU,WAAc,oDAAA,pDAACT,4CAAID,kFAChC,oDAAA,pDAACC,4CAAID,iGACI,oDAAA,pDAACC,4CAAID;;AAEvB,gCAAA,hCAAMW,wEAAeC;AAArB,AACE,6CAAA,7CAACP,sBAAOQ;;AACR,uSAAA,2CAAA,3UAACV,mDAAI,2BAAA,1BAAK,AAACN,mFAAsB,AAAA,sFAASe,yKAC9B,WAAKR;AAAL,AACE,OAACC,sBAAOQ,uBAAmB,AAACJ,+BAAe,AAACK,gBAAMV;GAFhE,uEAGkBI","names":["js/goog.define","app.api.backend/env","app.api.backend/api-url","cljs.core._EQ_","app.api.backend/transform-project","project","cljs.core.get","app.api.backend/fetch-and-update-projects","ajax.core.GET","response","cljs.core/reset!","app.state/project-list","cljs.core.mapv","app.components.common/error-handler","app.api.backend/transform-page","js/JSON.parse","app.api.backend/fetch-project","page","app.state/project-page","cljs.core/first"],"sourcesContent":["(ns app.api.backend\n  (:require [ajax.core :refer [GET]]\n            [app.state :as state]\n            [app.components.common :refer [error-handler]]))\n\n(goog-define env \"prod\")\n\n(defn api-url []\n  (if (= env \"dev\")\n    \"http://localhost:8080\"  ;; Your local dev URL\n    \"https://based-guide-backend.onrender.com\")) ;; Your production URL\n\n(defn transform-project [project]\n  {:name (get project \"projects/name\")\n   :pageid (get project \"projects/pageid\")\n   :tags (get project \"projects/tags\")\n   :image (get project \"frontimage\")})\n\n(defn fetch-and-update-projects []\n  (GET (str (api-url) \"/front\")\n    {:handler (fn [response]\n                (reset! state/project-list (mapv transform-project response)))\n     :error-handler error-handler}))\n\n(defn transform-page [project]\n  {:name (get project \"projects/name\")\n   :pageid (get project \"projects/pageid\")\n   :associated-links (js/JSON.parse (get project \"associated_links\"))\n   :tags (get project \"projects/tags\")\n   :markdown-text (get project \"projects/markdown_text\")})\n\n(defn fetch-project [page]\n  (reset! state/project-page nil)\n  (GET (str (api-url) \"/projects/\" (:pageid page))\n    {:handler (fn [response]\n                (reset! state/project-page (transform-page (first response))))\n     :error-handler error-handler}))\n\n"]}
{"version":3,"sources":["app/pages/projectpage.cljs"],"mappings":";AAQA,qCAAA,rCAAMA,kFAAcC;AAApB,AACE,AAACC,8BAAiBD;;AAClB;AAAA,AACA,cAAA,AAAAE,VAAMC,0BAASC;AAAf,AACE,oBAAI,iBAAAC,oBAAKF;AAAL,AAAA,oBAAAE;AAAa,OAACC,uBAAOH;;AAArBE;;;AAAJ,0FAAA,mDAAA,mCAAA,mFAAA,kDAAA;;AAAA,0FAAA,mDAAA,2CAAA,wDAAA,mCAAA,mFAAA,sJAAA,mFAAA,vLAIM,AAAA,mFAAOF,uJACL,AAAA,sGAAgBA","names":["app.pages.projectpage/project-page","pageid","app.api.backend/fetch-project","cljs.core/deref","project","app.state/project-page","and__5043__auto__","cljs.core/empty?"],"sourcesContent":["(ns app.pages.projectpage\n  (:require [reagent.core :as r]\n            [app.state :as state]\n            [app.api.backend :as be]\n            [app.components.common :refer [handler error-handler]]\n            [ajax.core :refer [GET]]\n            [clojure.core :refer [atom]]))\n\n(defn project-page [pageid]\n  (be/fetch-project pageid)\n  (fn []\n  (let [project @state/project-page]\n    (if (and project (empty? project))\n      [:div {}\n       [:h1 \"Page not found\"]]\n    [:div {:class \"flex justify-center my-4\"}\n     [:h1 (:name project)]\n     [:div  (:markdown-text project)]\n     ]))))\n"]}
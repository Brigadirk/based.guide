{"version":3,"sources":["app/core.cljs"],"mappings":";AAQA,wBAAA,xBAAMA;AAAN,AACE,mDAAA,5CAACC,oBAAUC,6FACE,WAAKC,EAAEA,MAAEA,MAAEC;AAAX,AACE,OAACC,qBAAiBD;;;AAEnC,gBAAA,hBAAeE;AAAf,AACE,AAACN;;AAGD,AAACO;;AAGD,IAAMC,qBAAa,AAAYC;AAA/B,AACE,AAACC,sBAAOR,wBAAoBM;;AAG5B,AAACH,qBAAiBG;;AAGpB,iDAAA,jDAACG,oIAAaC,0BAAe,wBAAA,xBAAiBC;;AAG9C,+BAAA,xBAAmBC,mCACA,WAAKX;AAAL,AAAQ,OAACE,qBAAiB,AAAYI","names":["app.core/init-routing","cljs.core/add-watch","app.state/current-route","_","new-route","app.routing/navigate","app.core/main","app.api.backend/fetch-and-update-projects","current-path","js/window.location","cljs.core/reset!","reagent.dom.render","app.layout/layout","js/document","js/window"],"sourcesContent":["(ns app.core\n  (:require [reagent.dom :as rdom]\n            [app.state :as state]\n            [app.api.backend :as backend]\n            [app.routing :as routing]\n            [app.layout :as layout]))\n\n;; Set a watch on the current route atom\n(defn init-routing []\n  (add-watch state/current-route :route-change\n               (fn [_ _ _ new-route]\n                 (routing/navigate new-route))))\n\n(defn ^:export main []\n  (init-routing)\n\n  ;; Fill the project-list atom with projects for the grid\n  (backend/fetch-and-update-projects)\n\n  ;; Re-establish the current route based on the browser's URL\n  (let [current-path (.-pathname js/window.location)]\n    (reset! state/current-route current-path)\n\n    ;; Set the current content based on the current route\n    (routing/navigate current-path))\n\n  ;; Render the app\n  (rdom/render [layout/layout] (.getElementById js/document \"app\"))\n\n  ;; Handle browser navigation events\n  (.addEventListener js/window \"popstate\"\n                     (fn [_] (routing/navigate (.-pathname js/window.location)))))\n\n\n"]}